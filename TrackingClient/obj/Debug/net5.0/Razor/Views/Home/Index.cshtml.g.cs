#pragma checksum "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e9011d116163286154ad6f0b10eaacff9133665"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\kiftmin\tsclient\TrackingClient\Views\_ViewImports.cshtml"
using TrackingClient.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
using TrackingClient.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
using TrackingClient;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e9011d116163286154ad6f0b10eaacff9133665", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed25df8759b193e8da9be3e40d84b0702661fc9e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/signalr/dist/browser/signalr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
  

    Layout = null;
    Processing.State ProcessingState = Global.ProcessingState;

    bool detected = @Global.IOConnectionStatus;
    bool reader = @Global.ReaderConnectionStatus;

    if (reader == false)
        detected = true;

    if (detected == false)
        reader = true;


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8e9011d116163286154ad6f0b10eaacff91336654339", async() => {
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8e9011d116163286154ad6f0b10eaacff91336655370", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8e9011d116163286154ad6f0b10eaacff91336655632", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        const connection = new signalR.HubConnectionBuilder()
            .withUrl(""/pagehub"")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        async function start() {
            try {
                await connection.start();
                console.log(""SignalR Connected."");
            } catch (err) {
                console.log(err);
                setTimeout(start, 2000);
            }
        };

        connection.onclose(async () => {
            await start();
        });

        // Start the connection.
        start();

        connection.on(""ReceiveProcessingState"", function (state) {
            console.log('ReceiveProcessingState = ' + state);

            let banner = document.getElementById('processStateBanner');
            let clr = 'gray'
            let lbl = '';

            switch (state) {
                case 0: lbl = '");
#nullable restore
#line 58 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.WaitingForUnit.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'navy\'; break;\r\n                case 1: lbl = \'");
#nullable restore
#line 59 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.UnitDetected.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'goldenrod\'; break;\r\n                case 2: lbl = \'");
#nullable restore
#line 60 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.UnitInStation.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'goldenrod\'; break;\r\n                case 3: lbl = \'");
#nullable restore
#line 61 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.ReadingTag.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'goldenrod\'; break;\r\n                case 4: lbl = \'");
#nullable restore
#line 62 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.TagRead.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'goldenrod\'; break;\r\n                case 5: lbl = \'");
#nullable restore
#line 63 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.ProcessingUnit.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'blue\'; break;\r\n                case 6: lbl = \'");
#nullable restore
#line 64 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.UnitReleased.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("\'; clr = \'limegreen\'; break;\r\n                case 7: lbl = \'");
#nullable restore
#line 65 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                          Write(Processing.State.TransactionFailed.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'; clr = 'red'; break;
            }

            banner.style.backgroundColor = clr;
            document.getElementById('processStateLabel').textContent = lbl;
        });

        connection.on(""ReceiveRFIDTag"", function (tag) {
            console.log('ReceiveRFIDTag = ' + tag.tagID);
            document.getElementById('tagId').textContent = tag.tagID;
            document.getElementById('tagPin').textContent = tag.pinNumber;
            document.getElementById('tagRBS').textContent = tag.rbsNumber;
            document.getElementById('tagTimeRead').textContent = tag.transponderReadTime;
        });

        connection.on(""ReceiveTransactionStatus"", function (status) {
            console.log('ReceiveTransactionStatus = ' + status);
            document.getElementById('transactionStatus').textContent = status;
        });

        connection.on(""ReceiveReaderConnectionState"", function (status) {
            console.log('ReceiveReaderConnectionState = ' + status);
            documen");
                WriteLiteral(@"t.getElementById('readerHBlbl').textContent = (new Date()).toISOString();
            let rdrHB = document.getElementById('readerHB');
            if (status)
                rdrHB.style.backgroundColor = 'limegreen';
            else
                rdrHB.style.backgroundColor = 'red';
            updateParents();
        });

        connection.on(""ReceiveIOConnectionState"", function (status) {
            console.log('ReceiveIOConnectionState = ' + status);
            document.getElementById('ioHBlbl').textContent = (new Date()).toISOString();
            let rdrHB = document.getElementById('ioHB');
            if (status)
                rdrHB.style.backgroundColor = 'limegreen';
            else
                rdrHB.style.backgroundColor = 'red';
            updateParents();
        });

        connection.on(""ReceiveReaderMQTTStatus"", function (status) {
            console.log('ReceiveReaderMQTTStatus = ' + status);
            let rdrHB = document.getElementById('readerMQTT');");
                WriteLiteral(@"
            rdrHB.textContent = (new Date()).toISOString();
            if (status)
                rdrHB.style.backgroundColor = 'limegreen';
            else
                rdrHB.style.backgroundColor = 'red';
            updateParents();
        });

        connection.on(""ReceiveIOMQTTStatus"", function (status) {
            console.log('ReceiveIOMQTTStatus = ' + status);
            let rdrHB = document.getElementById('ioMQTT');
            rdrHB.textContent = (new Date()).toISOString();
            if (status)
                rdrHB.style.backgroundColor = 'limegreen';
            else
                rdrHB.style.backgroundColor = 'red';
            updateParents();
        });

        function updateParents() {
            let e = null;
            let element = [ 'ioMQTT', 'readerMQTT', 'ioHB', 'readerHB' ];
            for (let i = 0; i < element.length; i++) {
                e = document.getElementById(element[i]);
                e.parentElement.style.backgroundColor = e.");
                WriteLiteral("style.backgroundColor;\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"load\", updateParents);\r\n    </script>\r\n\r\n");
#nullable restore
#line 141 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
      
        string clr = "gray";
        switch (ProcessingState)
        {
            case Processing.State.WaitingForUnit: clr = "navy"; break;
            case Processing.State.UnitDetected:
            case Processing.State.UnitInStation:
            case Processing.State.ReadingTag:
            case Processing.State.TagRead: clr = "goldenrod"; break;
            case Processing.State.ProcessingUnit: clr = "blue"; break;
            case Processing.State.UnitReleased: clr = "limegreen"; break;
            case Processing.State.TransactionFailed: clr = "red"; break;
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("        <div id=\"processStateBanner\"");
                BeginWriteAttribute("style", " style=\"", 6124, "\"", 6247, 3);
                WriteAttributeValue("", 6132, "margin-left:auto;margin-right:auto;color:white;background-color:", 6132, 64, true);
#nullable restore
#line 154 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
WriteAttributeValue("", 6196, clr, 6196, 4, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 6200, ";height:20vh;align-content:center;display:grid;", 6200, 47, true);
                EndWriteAttribute();
                WriteLiteral(">\r\n            <span id=\"processStateLabel\" style=\"text-align: center;font-size:xxx-large;\">");
#nullable restore
#line 155 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                                                                                    Write(ProcessingState.DisplayName());

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n        </div>\r\n");
                WriteLiteral(@"    <hr />

    <div style=""margin-left:auto;margin-right:auto;color:black;background-color:lightgray;align-content:center;display:grid;"">
        <span style=""text-align: center;font-size:large;"">Transaction Status: <label id=""transactionStatus""></label></span>
    </div>

    <hr />
    <table style=""margin-left:auto;margin-right:auto"" cellpadding=""0"" cellspacing=""0"">
        <tr>
            <td><b>Tag ID: </b></td>
            <td><label id=""tagId""></label></td>
        </tr>
        <tr>
            <td><b>Pin: </b></td>
            <td><label id=""tagPin""></label></td>
        </tr>
        <tr>
            <td><b>RBS: </b></td>
            <td><label id=""tagRBS""></label></td>
        </tr>
        <tr>
            <td><b>Time Read: </b></td>
            <td><label id=""tagTimeRead""></label></td>
        </tr>
        <tr>
            <td><b><br /><br />Reader Options:  </b> <span>&nbsp;</span>");
#nullable restore
#line 183 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                                                                   Write(ViewBag.ReaderOptions);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td><b>IO Options:  </b> <span>&nbsp;</span>");
#nullable restore
#line 186 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                                                   Write(ViewBag.IOOptions);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</td>
        </tr>

    </table>
    <h4 style=""color:gray;margin-left:auto;margin-right:auto;text-align:center""><b>Status</b></h4>
    <table style=""margin-left:auto;margin-right:auto;text-align:center;"" cellpadding=""0"" cellspacing=""0"">
        <tr>
            <td><b id=""readerMQTT""");
                BeginWriteAttribute("style", " style=\"", 7763, "\"", 7840, 2);
                WriteAttributeValue("", 7771, "background-color:", 7771, 17, true);
#nullable restore
#line 193 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
WriteAttributeValue("", 7788,  (Global.ReaderMQTTStatus ? "limegreen" : "red") , 7788, 52, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">Reader MQTT</td>\r\n            <td><b id=\"ioMQTT\"");
                BeginWriteAttribute("style", " style=\"", 7890, "\"", 7963, 2);
                WriteAttributeValue("", 7898, "background-color:", 7898, 17, true);
#nullable restore
#line 194 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
WriteAttributeValue("", 7915,  (Global.IOMQTTStatus ? "limegreen" : "red") , 7915, 48, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">IO MQTT</td>\r\n        </tr>\r\n        <tr>\r\n            <td><b id=\"readerHB\"");
                BeginWriteAttribute("style", " style=\"", 8040, "\"", 8123, 2);
                WriteAttributeValue("", 8048, "background-color:", 8048, 17, true);
#nullable restore
#line 197 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
WriteAttributeValue("", 8065,  (Global.ReaderConnectionStatus ? "limegreen" : "red") , 8065, 58, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">Reader HB: </b></td>\r\n            <td><label id=\"readerHBlbl\">");
#nullable restore
#line 198 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                                   Write(Global.ReaderConnectionStatusDate.ToString("yyyy-MM-dd HH:mm:ss"));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label></td>\r\n        </tr>\r\n        <tr>\r\n            <td><b id=\"ioHB\"");
                BeginWriteAttribute("style", " style=\"", 8325, "\"", 8404, 2);
                WriteAttributeValue("", 8333, "background-color:", 8333, 17, true);
#nullable restore
#line 201 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
WriteAttributeValue("", 8350,  (Global.IOConnectionStatus ? "limegreen" : "red") , 8350, 54, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">IO HB: </b></td>\r\n            <td><label id=\"ioHBlbl\">");
#nullable restore
#line 202 "C:\kiftmin\tsclient\TrackingClient\Views\Home\Index.cshtml"
                               Write(Global.IOConnectionStatusDate.ToString("yyyy-MM-dd HH:mm:ss"));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label></td>\r\n        </tr>\r\n    </table>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
